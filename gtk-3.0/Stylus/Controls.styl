

arrow
    -GtkArrow-arrow-scaling: 0.6;
    color: TextColor;
    &:hover
        color: TextColorHighlighted;

// GtkCalendar
calendar
    border-radius:              2em;
    color:                      TextColor;
    padding:                    0.125em;

    /* INCONSISTENT - Governs any days present on the calendar that do not belong to the currently selected month. */
    &:inconsistent
        color:                  TextColorDimmer;

    &:selected
        background-color:       SelectionColor;
        color:                  TextColorSelected;
        font-weight:            bold;
        &:backdrop
            background-color:   HighlightColor;
            color:              TextColorHighlighted;

    &.button
        @extends button.flat
        border-radius:          0.125em;
        &:hover
            color:              TextColorHighlighted;

    /* HEADER - Governs the calendar bar containing the month and year selection controls. */
    &.header
        shallow-outset();
        border-radius:          0.375em;

    /* HIGHLIGHT - Governs the list of weekdays at the top of the calendar. */
    &.highlight
        background-color:       transparent;
        background-image:       -gtk-gradient(
            linear, left top, left bottom,
            color-stop(0, transparent),
            color-stop(0.875, transparent),
            color-stop(1.0, SelectionColor));
        border-radius:          0em;
        color:                  TextColorLight;

        &:backdrop
            background-color:   transparent;
            background-image:   -gtk-gradient(
                linear, left top, left bottom,
                color-stop(0, transparent),
                color-stop(0.875, transparent),
                color-stop(1.0, HighlightColor));
            color:              TextColorDim;

// GtkComboBox
combobox
    // &.combobox-entry
    //     .entry
    //         border-radius:      2em 0em 0em 2em;
    //     .button
    //         deep-inset();
    //         border-radius:      0em 2em 2em 0em;
    //         padding:            0.375em;

    box.linked > button.combo:only-child
        // flat();
        shallow-inset();
        background-image:           none;
        border-radius:              0.125em;
        padding:                    0.375em;

        &:hover
            background-color:       HighlightColor;
            background-image:       none;

            cellview
                color:              TextColorHighlighted;

    menuitem:hover cellview
        color:                      TextColorSelected;

    // menuitem
    //     cellview
    //         color:                  TextColorSelected;
    //     &:hover label
    //         color:                  TextColorSelected;
    //     // background-color:       Red;
    //
    //     &:hover
    //         color:                  TextColorSelected;
        // cellview label
        //     color:                  Red;

        // menuitem:hover cellview
        //     color:                  Red;




        // menuitem:hover label
        //     color:                  TextColorHighlighted;


            // box cellview
            //     color:              TextColorHighlighted;

        // > box cellview
        //     border-radius:          0em;
        //     color:                  TextColor;

        // cellview
        //     deep-inset();
        //     border-radius:          0em;
        //     padding:                0.25em;
        //
        // &:hover
        //     flat();
        //     cellview
        //         background-color:   HighlightColor;
        //         color:              TextHighlightColor;


    // entry
    //     deep-inset();
    //     border-radius:          0em;
    //     padding:                0.25em;
        // cellview
        //     flat();
        //     border-radius:      0em;
    //
    // notebook &
    //     padding:            0.25em;

    // &:hover, &:prelight
    //     background-color:   HighlightColor;
    //     background-image:   none;

    // .horizontal.linked button,
    // .vertical.linked button
    //     @extends combobox;
    //
    //     &:first-child,
    //     &:last-child,
    //     &:only-child
    //         @extends combobox;
    //
    // // Governs the selected entry in the combobox (i.e. while it is still collapsed)
    // .cell:hover
    //     color:                  TextColorHighlighted;
    // // Governs the available combobox options (i.e. while it is expanded)
    // //
    // //      Unfortunately, for the time being, this appears to be the only way to manipulate text within the combobox menu.
    // .menuitem:hover *
    //     color:                  TextColorSelected;

check
    icon:                               "Icons/Checkbox.svg";

    &:checked
        icon:                           "Icons/Checkbox-Checked.svg";
        &:backdrop                      { icon: "Icons/Checkbox-Checked-Backdrop.svg"; }
        &:inconsistent                  { icon: "Icons/Checkbox-Checked-Partial.svg"; }
        &:inconsistent:backdrop         { icon: "Icons/Checkbox-Checked-Partial-Backdrop.svg"; }

    &:insensitive
        icon:                           "Icons/Checkbox-Inactive.svg";
        &:checked                       { icon: "Icons/Checkbox-Checked-Inactive.svg"; }
        &:inconsistent                  { icon: "Icons/Checkbox-Checked-Partial-Inactive.svg"; }

    .cell
        icon:                           "Icons/Checkbox-Small.svg";
        &:checked
            icon:                       "Icons/Checkbox-Small-Checked.svg";
            &:backdrop                  { icon: "Icons/Checkbox-Small-Checked-Backdrop.svg"; }
            &:inconsistent              { icon: "Icons/Checkbox-Small-Checked-Partial.svg"; }
            &:inconsistent:backdrop     { icon: "Icons/Checkbox-Small-Checked-Partial-Backdrop.svg"; }

        &:insensitive
            icon:                       "Icons/Checkbox-Small-Inactive.svg";
            &:checked                   { icon: "Icons/Checkbox-Small-Checked-Inactive.svg"; }
            &:inconsistent              { icon: "Icons/Checkbox-Small-Checked-Partial-Inactive.svg"; }

/* GTKEXPANDER - Governs the small arrow icon found next to expandable controls.
 *
 *      This control is usually found adjacent to text labels and indicates the presence of additional UI elements that are
 *      hidden while the expander is collapsed. Perhaps the most common example can be observed in hierarchical tree
 *      controls, where any given entry within the tree can contain a list of sub-entries.
 */
expander
    -GtkExpander-expander-size:     10;
    -GtkExpander-expander-spacing:  2;

    color:                                  TextColorLight;
    &:backdrop
        color:                              TextColor;

/* SCROLLBAR - Controls the appearance of scrollbars in container widgets. */
scrollbar
    -GtkScrollbar-has-backward-stepper:     false;
    -GtkScrollbar-has-forward-stepper:      false;
    -GtkScrollbar-min-slider-length:        30;

    border:                                 1px solid transparent;

    slider
        min-height:                         0.5em;
        min-width:                          0.5em;
        border:                             2px solid transparent;
        border-radius:                      2em;

    &.horizontal, &.horizontal:hover
        .slider, slider
            background-image:               vgradient(ScrollbarColor);
            &:backdrop
                background-color:           ScrollbarColorDim;
                background-image:           none;

    &.vertical, &.vertical:hover
        .slider, slider
            background-image:               hgradient(ScrollbarColor);
            &:backdrop
                background-color:           ScrollbarColorDim;
                background-image:           none;

    trough
        shallow-inset();
        border-radius:                      2em;



.scrollbars-junction,
.scrollbars-junction:backdrop
    flat();


/* SWITCH */
switch
    -GtkSwitch-slider-width:    48;

    // background-size:                        100%;
    background-repeat:                      no-repeat;
    background-size:                        contain;
    image:                                  "Icons/Switch-Trough.svg";
    padding:                                0em;

    slider
        background-repeat:                  no-repeat;
        background-size:                    contain;
        image:                              "Icons/Switch-Slider.svg";

    &:backdrop, &:backdrop:checked
    &:disabled, &:disabled:checked
        image:                              "Icons/Switch-Trough.svg";
        slider
            image:                          "Icons/Switch-Slider.svg";

    &:checked
        image:                              "Icons/Switch-Trough-On.svg";
        slider
            image:                          "Icons/Switch-Slider-On.svg";
            padding:                        0em;

        // &:checked
        //     image:      "Icons/Switch-Slider-On.svg";
        //     &:backdrop  { image: "Icons/Switch-Slider.svg"; }

    // &.trough
    //     image:          "Icons/Switch-Trough.svg";
    //     &:checked
    //         image:      "Icons/Switch-Trough-On.svg";
    //         &:backdrop  { image: "Icons/Switch-Trough-On-Backdrop.svg"; }


radio
    icon:                           "Icons/Radio.svg";
    &:checked
        icon:                       "Icons/Radio-Checked.svg";
        &:backdrop                  { icon: "Icons/Radio-Checked-Backdrop.svg"; }
        &:inconsistent              { icon: "Icons/Radio-Checked-Partial.svg"; }
        &:inconsistent:backdrop     { icon: "Icons/Radio-Checked-Partial-Backdrop.svg"; }

    &:insensitive
        icon:                       "Icons/Radio-Inactive.svg";
        &:checked                   { icon: "Icons/Radio-Checked-Inactive.svg"; }
        &:inconsistent              { icon: "Icons/Radio-Checked-Partial-Inactive.svg"; }
